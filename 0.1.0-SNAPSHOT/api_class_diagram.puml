@startuml
title
    Calypsonet - calypsonet-terminal-calypso-crypto-symmetric-java-api - 0.1.+ (2022-11-29)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

' -- Styles that don't work with new version of plantuml --
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' -- END --

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

' Yellow
skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

package "org.calypsonet.terminal.calypso.crypto.symmetric" as api {
    package spi {
        +interface SymmetricCryptoTransactionManagerFactorySpi {
            +boolean isExtendedModeSupported ()
    
            +SymmetricCryptoTransactionManagerSpi createTransactionManager (byte[] cardKeyDiversifier, boolean useExtendedMode, List<byte[]> transactionAuditData)
        }
        +interface SymmetricCryptoTransactionManagerSpi {
            +byte[] initTerminalSessionContext ()
            +void initTerminalSessionMac (byte[] openSecureSessionDataOut, byte kif, byte kvc)
            +byte[] updateTerminalSessionMac (byte[] cardApdu)
            +byte[] finalizeTerminalSessionMac ()
    
            +byte[] generateTerminalSessionMac ()
    
            +void activateEncryption ()
            +void deactivateEncryption ()
    
            +boolean isCardSessionMacValid (byte[] cardSessionMac)
    
            +void computeSvCommandSecurityData (SvCommandSecurityDataApi data)
            +boolean isCardSvMacValid (byte[] cardSvMac)
    
            +byte[] cipherPinForPresentation (byte[] cardChallenge, byte[] pin, Byte kif, Byte kvc)
            +byte[] cipherPinForModification (byte[] cardChallenge, byte[] currentPin, byte[] newPin, Byte kif, Byte kvc)
            +byte[] generateCipheredCardKey (byte[] cardChallenge, byte issuerKeyKif, byte issuerKeyKvc, byte targetKeyKif, byte targetKeyKvc)

            +void synchronize ()
        }
    }
    +class "<<Exception>>\nSymmetricCryptoException" as SymmetricCryptoException {
        +SymmetricCryptoException (String message)
        +SymmetricCryptoException (String message, Throwable cause)
    }
    +class "<<Exception>>\nSymmetricCryptoIOException" as SymmetricCryptoIOException {
        +SymmetricCryptoIOException (String message)
        +SymmetricCryptoIOException (String message, Throwable cause)
    }
    +interface SvCommandSecurityDataApi {
        +byte[] getSvGetRequest ()
        +byte[] getSvGetResponse ()
        +byte[] getSvCommandPartialRequest ()

        +SvCommandSecurityDataApi setSerialNumber (byte[] serialNumber)
        +SvCommandSecurityDataApi setTransactionNumber (byte[] transactionNumber)
        +SvCommandSecurityDataApi setTerminalChallenge (byte[] terminalChallenge)
        +SvCommandSecurityDataApi setTerminalSvMac (byte[] terminalSvMac)
    }

'
'    +interface SymmetricCryptoTransactionManagerFactorySpiDesignByUseCase {
'        +byte[] initTerminalSecureSessionContext (byte[] keyDiversifier)
'
'        +byte[] computeTerminalSessionMac (byte[] openSecureSessionDataOut, byte kif, byte kvc, List<byte[]> cardApdus)
'        +void initTerminalSessionMac (byte[] openSecureSessionDataOut, byte kif, byte kvc)
'        +void initTerminalSessionMac (byte[] openSecureSessionDataOut, byte kif, byte kvc, List<byte[]> cardApdus)
'        +void updateTerminalSessionMac (List<byte[]> cardApdus)
'        +byte[] updateTerminalSessionMacEncrypted (byte[] cardApdu)
'        +byte[] finalizeTerminalSessionMac (List<byte[]> cardApdus)
'        +byte[] finalizeTerminalSessionMac ()
'
'        +<s>byte[] generateTerminalSessionMac ()
'
'        +boolean verifyCardSessionMac (byte[] cardSessionMac)
'
'        +void generateSvCommandSecurityData (SvCommandSecurityDataApi SvCommandSecurityDataApi)
'        +void generateSvCommandSecurityData (byte[] cardSerial, SvCommandSecurityDataApi SvCommandSecurityDataApi)
'        +boolean verifyCardSvMac (byte[] cardSvMac)
'        +boolean verifyCardSessionAndSvMac (byte[] cardSessionMac, byte[] cardSvMac)
'
'        +byte[] cipherPinForPresentation (byte[] openSecureSessionDataOut, byte kif, byte kvc, List<byte[]> cardApdus, byte[] cardSerial, byte[] cardChallenge, byte[] pin, byte kif, byte kvc)
'        +byte[] cipherPinForPresentation (byte[] cardSerial, byte[] cardChallenge, byte[] pin, byte kif, byte kvc)
'        +byte[] cipherPinForModification (byte[] cardSerial, byte[] cardChallenge, byte[] currentPin, byte[] newPin, byte kif, byte kvc)
'        +byte[] generateCardKey (byte[] cardSerial, byte[] cardChallenge, byte issuerKeyKif, byte issuerKeyKvc, byte targetKeyKif, byte targetKeyKvc)
'    }
}

' Associations

SymmetricCryptoTransactionManagerFactorySpi ..> SymmetricCryptoTransactionManagerSpi #C_LINK : provide >

SymmetricCryptoTransactionManagerSpi .left.> SvCommandSecurityDataApi #C_USE : use >

SymmetricCryptoTransactionManagerSpi ..> SymmetricCryptoException #C_USE : throws >
SymmetricCryptoTransactionManagerSpi ..> SymmetricCryptoIOException #C_USE : throws >

' == LAYOUT ==

' == STYLE ==

package api #C_GREY1 {}
package spi #C_GREY2 {}

interface SvCommandSecurityDataApi <<purple>>
interface SymmetricCryptoException <<purple>>
interface SymmetricCryptoIOException <<purple>>

@enduml